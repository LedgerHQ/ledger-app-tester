name: Test All Apps on given SDK ref

on:
  schedule:
    - cron: '32 5 * * 1'

  pull_request:

  workflow_dispatch:
    inputs:
      default_all_apps:
        description: Run on All Apps (default is defined Whitelist & Blacklist).
        type: boolean
        required: false
        default: false
      sdk_ref:
        description: The SDK branch or sha1 to build against.
        type: string
        required: false
        default: 'master'
      with_nanosp:
        description: Request to target Nanos+.
        type: boolean
        required: false
        default: true
      with_nanox:
        description: Request to target Nanox.
        type: boolean
        required: false
        default: true
      with_stax:
        description: Request to target Stax.
        type: boolean
        required: false
        default: true
      with_flex:
        description: Request to target Flex.
        type: boolean
        required: false
        default: true
      send_to_slack:
        description: Request to send the result on Slack.
        type: boolean
        required: false
        default: false


env:
  # Add the names of the repositories to whitelist here, separated by spaces
  WHITELIST: "app-boilerplate app-boilerplate-rust app-btcext-boilerplate app-celo-spender app-eos app-ethereum app-hedera app-mina app-monero \
              app-multiversx app-nem app-neo app-openpgp app-plugin-boilerplate app-plugin-bricktowers \
              app-plugin-chorus-one app-plugin-eigenlayer app-plugin-kelp app-plugin-origin app-near \
              app-solana app-symbol app-u2f app-xah app-xrp app-zilliqa"

  # Removing (This manifest does not contains the 'tests.pytest_directory' field)
  # - app-avail
  # - app-core-dao
  # - app-flare
  # - app-ironfish
  # - app-peaq
  # - app-sei
  # - app-spacemesh
  # - app-stacks
  # - app-tezos
  # - app-tezos-baking
  # - app-thorchain-new
  # - app-app-alephium
  # - app-iota-rebased
  # - app-ironfish-dkg
  # Removing
  # - app-acre: FileNotFoundError: [Errno 2] No such file or directory: '/bitcoin/bin/bitcoind' AND no manifest
  # - app-plugin-coinbase: pytest: command not found
  # Removing (Failed to build pysha3)
  # - app-kaspa
  # - app-tron
  # - app-vechain
  # Removing (Blocked in the 1st test)
  # - app-bitcoin-clone-boilerplate
  # - app-plugin-midas
  # Removing (Legacy)
  # - app-plugin-morpho-legacy

  # WHITELIST: "app-acre app-alephium app-avail app-bitcoin-clone-boilerplate app-boilerplate app-boilerplate-rust \
  #             app-btcext-boilerplate app-celo-spender app-core-dao app-eos app-ethereum app-flare app-hedera app-iota-rebased \
  #             app-ironfish app-ironfish-dkg app-kaspa app-mina app-monero app-multiversx app-near app-nem app-neo app-openpgp \
  #             app-peaq app-plugin-boilerplate app-plugin-bricktowers app-plugin-chorus-one app-plugin-coinbase \
  #             app-plugin-eigenlayer app-plugin-kelp app-plugin-midas app-plugin-morpho-legacy app-plugin-origin app-sei \
  #             app-solana app-spacemesh app-stacks app-symbol app-tezos app-tezos-baking app-thorchain-new app-tron app-u2f \
  #             app-vechain app-xah app-xrp app-zilliqa"

  # BLACKLIST:


jobs:
  devices_config:
    name: Set devices
    uses: ./.github/workflows/_setup_devices.yml
    with:
      with_nanosp: ${{ inputs.with_nanosp || false }}
      with_nanox: ${{ inputs.with_nanox || false }}
      with_stax: ${{ inputs.with_stax || false }}
      with_flex: ${{ inputs.with_flex || false }}

  apps_config:
    name: Set SDK, Whitelist and Blacklist
    runs-on: ubuntu-latest
    outputs:
      whitelist: ${{ steps.get_whitelist.outputs.whitelist }}
      blacklist: ${{ steps.get_blacklist.outputs.blacklist }}

    steps:
      - name: Get Whitelist Apps
        if: inputs.default_all_apps == false
        id: get_whitelist
        run: |
          echo "whitelist=${{ env.WHITELIST || '' }}" >> "$GITHUB_OUTPUT"
      - name: Get Blacklist Apps
        if: inputs.default_all_apps == false
        id: get_blacklist
        run: |
          echo "blacklist=${{ env.BLACKLIST || '' }}" >> "$GITHUB_OUTPUT"

  execute_build:
    name: Build All apps
    needs: [devices_config, apps_config]
    uses: ./.github/workflows/_build_app.yml
    with:
      mode: "test"
      sdk_branch: ${{ inputs.sdk_ref }}
      sdk_type: "all"
      devices: ${{ needs.devices_config.outputs.devices_config }}
      exclude_apps: ${{ needs.apps_config.outputs.blacklist }}
      only_apps: ${{ needs.apps_config.outputs.whitelist }}

  build_artifacts:
    name: Build Artifacts
    if: always()
    needs: [execute_build]
    uses: ./.github/workflows/_artifacts.yml
    with:
      mode: "build"

  execute_test:
    name: Test All apps
    if: always()
    needs: [build_artifacts]
    uses: ./.github/workflows/_test_app.yml

  test_artifacts:
    name: Test Artifacts
    if: always()
    needs: [execute_test]
    uses: ./.github/workflows/_artifacts.yml
    with:
      mode: "test"

  test_status:
    name: Test Status
    if: always()
    needs: [execute_build, test_artifacts]
    uses: ./.github/workflows/_status.yml
    with:
      mode: "test"
      job_name: "Build"
      total_apps: ${{ needs.execute_build.outputs.total_apps }}

  slack_message:
    name: Slack Message
    if: always()
    needs: [devices_config, execute_build, test_status]
    uses: ./.github/workflows/_slack_message.yml
    secrets: inherit
    with:
      devices: ${{ needs.devices_config.outputs.devices_config }}
      total_apps: ${{ needs.execute_build.outputs.total_apps }}
      title: "Test"
      send_to_slack: ${{ inputs.send_to_slack || false }}
