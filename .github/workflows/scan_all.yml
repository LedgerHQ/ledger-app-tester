name: Scan apps on given SDK ref

on:
  schedule:
    - cron: '32 5 * * 1,2,3,4,5'

  pull_request:

  workflow_dispatch:
    inputs:
      sdk_ref:
        description: The SDK branch or sha1 to build against.
        type: string
        required: false
        default: 'master'
      with_nanosp:
        description: Request to target Nanos+
        type: boolean
        required: false
        default: true
      with_nanox:
        description: Request to target Nanox
        type: boolean
        required: false
        default: true
      with_stax:
        description: Request to target Stax
        type: boolean
        required: false
        default: true
      with_flex:
        description: Request to target Flex
        type: boolean
        required: false
        default: true
      send_to_slack:
        description: Request to send the result on Slack
        type: boolean
        required: false
        default: false


env:
  # Add the names of the repositories to whitelist here, separated by spaces
  WHITELIST: "app-bitcoin app-bitcoin-new app-boilerplate app-cardano app-ethereum app-exchange app-monero app-passwords app-plugin-boilerplate app-recovery-check app-security-key app-solana app-tron app-xrp"
  # BLACKLIST:
  DEFAULT_SDK: "master"


jobs:
  devices_config:
    name: Set devices
    uses: ./.github/workflows/_setup_devices.yml
    with:
      with_nanosp: ${{ inputs.with_nanosp || false }}
      with_nanox: ${{ inputs.with_nanox || false }}
      with_stax: ${{ inputs.with_stax || false }}
      with_flex: ${{ inputs.with_flex || false }}

  apps_config:
    name: Set SDK, Whitelist and Blacklist
    runs-on: ubuntu-latest
    outputs:
      whitelist: ${{ steps.get_whitelist.outputs.whitelist }}
      blacklist: ${{ steps.get_blacklist.outputs.blacklist }}
      sdk_ref: ${{ steps.get_sdk.outputs.sdk_ref }}

    steps:
      - name: Get Whitelist Apps
        id: get_whitelist
        run: |
          echo "whitelist=${{ env.WHITELIST || '' }}" >> "$GITHUB_OUTPUT"
      - name: Get Blacklist Apps
        id: get_blacklist
        run: |
          echo "blacklist=${{ env.BLACKLIST || '' }}" >> "$GITHUB_OUTPUT"

      - name: Get SDK
        id: get_sdk
        run: |
          echo "sdk_ref=${{ inputs.sdk_ref || env.DEFAULT_SDK }}" >> "$GITHUB_OUTPUT"

  execute_build:
    name: Scan All C apps
    needs: [devices_config, apps_config]
    uses: ./.github/workflows/_build_app.yml
    with:
      mode: "scan"
      sdk_branch: ${{ needs.apps_config.outputs.sdk_ref }}
      sdk_type: "c"
      devices: ${{ needs.devices_config.outputs.devices_config }}
      exclude_apps: ${{ needs.apps_config.outputs.blacklist }}
      only_apps: ${{ needs.apps_config.outputs.whitelist }}

  build_artifacts:
    name: Build Artifacts
    if: always()
    needs: [execute_build]
    uses: ./.github/workflows/_artifacts.yml
    with:
      mode: "build"

  build_status:
    name: Build Status
    if: always()
    needs: [execute_build, build_artifacts]
    uses: ./.github/workflows/_status.yml
    with:
      mode: "build"
      job_name: "Scan"
      total_apps: ${{ needs.execute_build.outputs.total_apps }}

  notify_slack:
    name: Slack notification
    if: always()
    needs: [build_status, devices_config, execute_build]
    uses: ./.github/workflows/_notify_slack.yml
    with:
      devices: ${{ needs.devices_config.outputs.devices_config }}
      total_apps: ${{ needs.execute_build.outputs.total_apps }}
      send_to_slack: ${{ inputs.send_to_slack || false }}
      title: "Scan"
