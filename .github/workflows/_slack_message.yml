name: Prepare Slack Message

on:
  workflow_call:
    inputs:
      title:
        description: Slack message title.
        required: True
        type: string
      run_for_devices:
        description: List of analyzed devices.
        required: false
        type: string
      total_apps:
        description: Total number of analyzed Apps.
        required: true
        type: string
      send_to_slack:
        description: Request to send the result on Slack.
        type: boolean
        required: false
        default: false


jobs:
  info_slack:
    name: Message
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: pip install --break-system-packages -r requirements.txt

      - name: Check build error artifact
        id: check_error_artifact
        run: |
          ARGS=(-p apps_errors -e ARTIFACT_ERROR_FOUND)
          ./scripts/get_artifacts.py "${ARGS[@]}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_RUN_ID: ${{ github.run_id }}

      - name: Download errors
        if: steps.check_error_artifact.outputs.ARTIFACT_ERROR_FOUND == 'true'
        id: download_error
        uses: actions/download-artifact@v4
        with:
          name: apps_errors

      - name: Convert to Slack Json
        id: slack_msg
        run: |
          ARGS=(--json slack.json --title "${{ inputs.title }}")
          if [ -n "${{ inputs.run_for_devices }}" ]; then
            ARGS+=(-d ${{ inputs.run_for_devices }})
          fi
          ARGS+=(-n ${{ inputs.total_apps }})
          if [ -f apps_errors.md ]; then
            ARGS+=(--errors apps_errors.md)
          fi
          scripts/slack_message.py "${ARGS[@]}"
        env:
          GH_RUN_ID: ${{ github.run_id }}

      - name: Print Slack Message
        if: ${{ steps.slack_msg.outcome == 'success' }}
        run: |
          cat slack.json

      - name: Send custom JSON data to Slack
        if: ${{ github.event_name == 'schedule' || inputs.send_to_slack == true }}
        uses: slackapi/slack-github-action@v2
        with:
          payload-file-path: slack.json
          webhook-type: 'incoming-webhook'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_APP_TESTER }}
